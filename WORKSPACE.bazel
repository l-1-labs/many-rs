load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

## RUST SECTION ##
http_archive(
    name = "rules_rust",
    sha256 = "d125fb75432dc3b20e9b5a19347b45ec607fabe75f98c6c4ba9badaab9c193ce",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.17.0/rules_rust-v0.17.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

RUST_VERSION = "nightly/2023-01-03"

rust_register_toolchains(
    edition = "2021",
    versions = [RUST_VERSION],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

# Generate `rust-analyser` "rust-project.json"
load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rust_analyzer_dependencies()

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository")

crates_repository(
    name = "crate_index",
    # The following annotations are needed to prevent Bazel passing incompatible C/CXX flags when coverage is enabled
    # https://github.com/bazelbuild/rules_rust/issues/1550
    annotations = {
        "librocksdb-sys": [crate.annotation(
            build_script_env = {
                "CXXFLAGS": "-Wno-error=coverage-invalid-line-number",
            },
        )],
        "libudev-sys": [crate.annotation(
            patch_args = ["-p1"],
            patches = ["@//third_party/cargo/patches:libudev-sys-0.1.4.patch"],
        )],
    },
    cargo_lockfile = "//:Cargo.Bazel.lock",
    lockfile = "//:cargo-bazel-lock.json",
    manifests = [
        "//:Cargo.toml",
        "//src/http_proxy:Cargo.toml",
        "//src/idstore-export:Cargo.toml",
        "//src/kvstore:Cargo.toml",
        "//src/ledger-db:Cargo.toml",
        "//src/ledger:Cargo.toml",
        "//src/many-abci:Cargo.toml",
        "//src/many-client-macros:Cargo.toml",
        "//src/many-client:Cargo.toml",
        "//src/many-error:Cargo.toml",
        "//src/many-identity-dsa:Cargo.toml",
        "//src/many-identity-hsm:Cargo.toml",
        "//src/many-identity-webauthn:Cargo.toml",
        "//src/many-identity:Cargo.toml",
        "//src/many-kvstore:Cargo.toml",
        "//src/many-ledger/test-macros:Cargo.toml",
        "//src/many-ledger/test-utils:Cargo.toml",
        "//src/many-ledger:Cargo.toml",
        "//src/many-macros:Cargo.toml",
        "//src/many-migration:Cargo.toml",
        "//src/many-mock:Cargo.toml",
        "//src/many-modules:Cargo.toml",
        "//src/many-protocol:Cargo.toml",
        "//src/many-server:Cargo.toml",
        "//src/many-types:Cargo.toml",
        "//src/many:Cargo.toml",
    ],
    rust_version = RUST_VERSION,
)

load("@crate_index//:defs.bzl", "crate_repositories")

crate_repositories()
## END RUST SECTION ##

## PACKAGE SECTION ##
http_archive(
    name = "rules_pkg",
    sha256 = "eea0f59c28a9241156a47d7a8e32db9122f3d50b505fae0f33de6ce4d9b61834",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.8.0/rules_pkg-0.8.0.tar.gz",
        "https://github.com/bazelbuild/rules_pkg/releases/download/0.8.0/rules_pkg-0.8.0.tar.gz",
    ],
)

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")

rules_pkg_dependencies()
## END PACKAGE SECTION ##

## DOCKER SECTION ##
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf",
    urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.25.0/rules_docker-v0.25.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rust_repositories")

rust_repositories()

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps(
    # https://github.com/bazelbuild/rules_docker/issues/1902
    go_repository_default_config = "@//:WORKSPACE.bazel",
)

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

# Use Ubuntu Kinetic (22.10) as the base image
container_pull(
    name = "ubuntu_base",
    # 'tag' is also supported, but digest is encouraged for reproducibility.
    digest = "sha256:f0a63f53b736b9211a5313a7219f6cc012b7cf4194c7ce2248fac8162b56dceb",
    registry = "index.docker.io",
    repository = "ubuntu",
)
### END DOCKER SECTION ##
