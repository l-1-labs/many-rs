load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

## RUST SECTION ##
http_archive(
    name = "rules_rust",
    sha256 = "d125fb75432dc3b20e9b5a19347b45ec607fabe75f98c6c4ba9badaab9c193ce",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.17.0/rules_rust-v0.17.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

RUST_VERSION = "nightly/2023-01-03"

rust_register_toolchains(
    edition = "2021",
    versions = [RUST_VERSION],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

# Generate `rust-analyser` "rust-project.json"
load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rust_analyzer_dependencies()

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository")

crates_repository(
    name = "crate_index",
    # The following annotations are needed to prevent Bazel passing incompatible C/CXX flags when coverage is enabled
    # https://github.com/bazelbuild/rules_rust/issues/1550
    annotations = {
        "librocksdb-sys": [crate.annotation(
            build_script_env = {
                "CXXFLAGS": "-Wno-error=coverage-invalid-line-number",
            },
        )],
        "libudev-sys": [crate.annotation(
            patch_args = ["-p1"],
            patches = ["@//third_party/cargo/patches:libudev-sys-0.1.4.patch"],
        )],
    },
    cargo_lockfile = "//:Cargo.Bazel.lock",
    lockfile = "//:cargo-bazel-lock.json",
    manifests = [
        "//:Cargo.toml",
        "//src/http_proxy:Cargo.toml",
        "//src/idstore-export:Cargo.toml",
        "//src/kvstore:Cargo.toml",
        "//src/ledger-db:Cargo.toml",
        "//src/ledger:Cargo.toml",
        "//src/many-abci:Cargo.toml",
        "//src/many-client-macros:Cargo.toml",
        "//src/many-client:Cargo.toml",
        "//src/many-error:Cargo.toml",
        "//src/many-identity-dsa:Cargo.toml",
        "//src/many-identity-hsm:Cargo.toml",
        "//src/many-identity-webauthn:Cargo.toml",
        "//src/many-identity:Cargo.toml",
        "//src/many-kvstore:Cargo.toml",
        "//src/many-ledger/test-macros:Cargo.toml",
        "//src/many-ledger/test-utils:Cargo.toml",
        "//src/many-ledger:Cargo.toml",
        "//src/many-macros:Cargo.toml",
        "//src/many-migration:Cargo.toml",
        "//src/many-mock:Cargo.toml",
        "//src/many-modules:Cargo.toml",
        "//src/many-protocol:Cargo.toml",
        "//src/many-server:Cargo.toml",
        "//src/many-types:Cargo.toml",
        "//src/many:Cargo.toml",
    ],
    rust_version = RUST_VERSION,
)

load("@crate_index//:defs.bzl", "crate_repositories")

crate_repositories()
## END RUST SECTION ##

## PACKAGE SECTION ##
http_archive(
    name = "rules_pkg",
    sha256 = "eea0f59c28a9241156a47d7a8e32db9122f3d50b505fae0f33de6ce4d9b61834",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.8.0/rules_pkg-0.8.0.tar.gz",
        "https://github.com/bazelbuild/rules_pkg/releases/download/0.8.0/rules_pkg-0.8.0.tar.gz",
    ],
)

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")

rules_pkg_dependencies()
## END PACKAGE SECTION ##

## DOCKER SECTION ##
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf",
    urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.25.0/rules_docker-v0.25.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rust_repositories")

rust_repositories()

load(
    "@io_bazel_rules_docker//toolchains/docker:toolchain.bzl",
    docker_toolchain_configure = "toolchain_configure",
)

# Force Docker toolchain to use 'which' to find Docker binary.
docker_toolchain_configure(
    name = "docker_config",
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps(
    # https://github.com/bazelbuild/rules_docker/issues/1902
    go_repository_default_config = "@//:WORKSPACE.bazel",
)

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

# Use Ubuntu Kinetic (22.10) as the base image
container_pull(
    name = "ubuntu_base",
    # 'tag' is also supported, but digest is encouraged for reproducibility.
    digest = "sha256:f0a63f53b736b9211a5313a7219f6cc012b7cf4194c7ce2248fac8162b56dceb",
    registry = "index.docker.io",
    repository = "ubuntu",
)

container_pull(
    name = "tendermint",
    registry = "index.docker.io",
    repository = "tendermint/tendermint",
    tag = "v0.35.8",
)

# TODO: LL should have it's own openssl image
#       This image is not official nor tagged
container_pull(
    name = "openssl",
    registry = "index.docker.io",
    repository = "alpine/openssl",
    tag = "latest",
)

container_pull(
    name = "jsonnet",
    registry = "index.docker.io",
    repository = "bitnami/jsonnet",
    tag = "0.19.1",
)

### END DOCKER SECTION ##

### BATS SECTION ###
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

BAZEL_BATS_VERSION = "0.31.0"

BAZEL_BATS_SHA256 = "d4666a1d2c37ef38bace5b66fc787108c37ac8c8e8def0fdb5ba13f45e52711f"

http_archive(
    name = "bazel_bats",
    sha256 = BAZEL_BATS_SHA256,
    strip_prefix = "bazel-bats-%s" % BAZEL_BATS_VERSION,
    urls = [
        "https://github.com/filmil/bazel-bats/archive/refs/tags/v%s.tar.gz" % BAZEL_BATS_VERSION,
    ],
)

load("@bazel_bats//:deps.bzl", "bazel_bats_dependencies")

BATS_ASSERT_VERSION = "2.0.0"

BATS_ASSERT_SHA256 = "15dbf1abb98db785323b9327c86ee2b3114541fe5aa150c410a1632ec06d9903"

BATS_CORE_VERSION = "1.7.0"

BATS_CORE_SHA256 = "ac70c2a153f108b1ac549c2eaa4154dea4a7c1cc421e3352f0ce6ea49435454e"

BATS_SUPPORT_VERSION = "0.3.0"

BATS_SUPPORT_SHA256 = "7815237aafeb42ddcc1b8c698fc5808026d33317d8701d5ec2396e9634e2918f"

bazel_bats_dependencies(
    bats_assert_sha256 = BATS_ASSERT_SHA256,
    bats_assert_version = BATS_ASSERT_VERSION,
    bats_support_sha256 = BATS_SUPPORT_SHA256,
    bats_support_version = BATS_SUPPORT_VERSION,
    sha256 = BATS_CORE_SHA256,
    version = BATS_CORE_VERSION,
)
### END BATS SECTION ###

### MULTIRUN SECTION ###
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_multirun",
    sha256 = "a08f77a490b7f88a9f641df0344373e83763eb92cf502c699fb641db84e5d3ba",
    strip_prefix = "rules_multirun-0.4.1",
    url = "https://github.com/keith/rules_multirun/archive/refs/tags/0.4.1.tar.gz",
)
### END MULTIRUN SECTION ###
